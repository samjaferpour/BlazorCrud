@page "/"
@using Crud.Frontend.Components
@using Crud.Frontend.Models
@using Crud.Frontend.Services
@inject IProductServices ProductServices
@inject NavigationManager NavigationManager


<PageTitle>Home</PageTitle>

<ModalDialog ModalTitle="Create New Product" @ref="_modalDialog">
    <EditForm Model="@ProductModel" OnInvalidSubmit="@HandleSave">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <label>Name:</label>
        <input type="text" class="mt-2 form-control" @bind="ProductModel.Name" /><br />
        <ValidationMessage For="() => ProductModel.Name" />

        <label>Price:</label>
        <input type="number" class="mt-2 form-control" @bind="ProductModel.Price" /><br />
        <ValidationMessage For="() => ProductModel.Price" />

        <button class="btn btn-primary mt-3" type="submit">Save</button>
        <a class="btn btn-info mt-3" onclick="@CloseModal">Cancel</a>
    </EditForm>
</ModalDialog>

<h3>Products List</h3>

<a class="btn btn-success mt-3" onclick="@OpenCreateModal">Add New Product</a>

<table class="table table-hover table-striped mt-3">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Price</th>
            <th>Operation</th>
        </tr>
    </thead>
    <tbody>
        @if (_loading)
        {
            <div class="spinner-border" style="width: 3rem; height: 3rem;" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        }
        else
        {
            @foreach (var item in _products)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.Price</td>
                    <td>
                        <a class="btn btn-warning" href="/edit-product/@item.Id">Edit</a>
                        <a class="btn btn-danger ms-3" href="/remove-product/@item.Id">Remove</a>
                    </td>
                </tr>
            }
        }

    </tbody>
</table>



@code {
    IList<ProductModel> _products;
    bool _loading = true;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _products = await ProductServices.GetAllProducts();
        _loading = false;
    }

    ModalDialog _modalDialog;
    void OpenCreateModal()
    {
        _modalDialog.backDrop = true;
        _modalDialog.Open();
    }

    void CloseModal()
    {
        _modalDialog.Close();
    }

    public ProductModel ProductModel { get; set; } = new();
    private async Task HandleSave()
    {
        var response = await ProductServices.AddNewProduct(ProductModel);
        _products.Add(ProductModel);
        CloseModal();
    }

}
